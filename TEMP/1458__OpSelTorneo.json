{"nivelCero":{"claveComponente":"1458__OpSelTorneo","nombreComponente":"Operador torneo","tipo":"Orientado al servicio","clasACM":"Theory of computation","autores":[{"nombreAutor":"M.C.C. Christian Eduardo Millán Hernández","correoAutor":"ceduardo@prb.com","aliasGitlab":"ceduardo"},{"nombreAutor":"Dr. René Arnulfo García Hernández","correoAutor":"renearnulfo@prb.com","aliasGitlab":"renearnulfo"}],"descProblema":"El operador torneo[1] selecciona un pequeño grupo de individuos y compiten por el derecho a ser padre.\nElegidos los individuos, el que posee la mejor evalución es seleccionado.\nExisten dos versiones: Determinística y Probabilistica\n\n1. Versión determinística \n\t1.1. Selecciona k individuos al azar\n\t1.2. Se comparan con base en su aptitud\n\t1.3. El ganador del torneo es aquel individuo más apto\n\t1.4. Realizar los pasos anteriores n veces hasta completar la cantida de padres deseados\n\n2. Versión probabilistica\n\tLa diferencia entre la versión anterior es la implementación de probabilidad.\n\tLa probailidad de termina si en el paso 1.3. se elige el mñas apto o el peor ( este probabilida da \n\toporotunidad a los peores padres de ser seleccionados)\n\n3. Versión modificada\n\tSe agrega una opción de elegir los padres pares por torneo y los padres impares de manera aleatoria \n\nDocumentación complementaria y ejemplo de uso, visitar: https://www.youtube.com/","reqFuncionales":["N/A"],"reqNoFuncionales":["N/A"],"aportacion":"N/A","similitud":"N/A","sintaxis":[{"param":"CONFIG","tipoparam":"rout","descripcion":"Ruta del archivo que contiene los paramétros siguiente"},{"param":"FWORK","tipoparam":"rout","descripcion":"Directorio de trabajo donde se ejecuta el algoritmo genético"},{"param":"FACTG","tipoparam":"rout","descripcion":"Directorio en donde se encuentra la población actual"},{"param":"FFA","tipoparam":"rout","descripcion":"Directorio en donde se encuentra el valor de aptitud de la población actual"},{"param":"FSELECT","tipoparam":"int","descripcion":"Archivo donde se guarda la lista de padres seleccionados"},{"param":"KTOURN","tipoparam":"int","descripcion":"Tamaño del torneo, por default 2"},{"param":"PTOURN","tipoparam":"int","descripcion":"Probabilidad de elegir al mejor adaptado, por defualt 100"},{"param":"ONEALEO","tipoparam":"int","descripcion":"Se seleciona el padre par por torneo y el padre impar aleatorio, por default OFF"},{"param":"THSELECT","tipoparam":"int","descripcion":"Número de hilos, por default 1 (1 = secuencial | 0 = auto-calculan los hilos))"},{"param":"OPTIMOD","tipoparam":"int","descripcion":"Modo de optimización: (MIN|MAX), por default MAX"},{"param":"LOG","tipoparam":"int","descripcion":"Impresión del log: ON:OFF, por default ON"},{"param":"FLOG","tipoparam":"int","descripcion":"Archivo donde se guarda el log, por default log.txt"}]},"nivelUno":null,"nivelDos":null,"nivelTres":null,"nivelCuatro":null,"nivelCinco":null,"nivelSeis":null,"nivelSiete":null,"nivelOcho":{"exposicion":[{"referencia":"Coello, C. A. C., & Zacatenco, C. S. P. (2004). Introducción a la computación evolutiva (Notas de curso). CINVESTAV-IPN, Departamento de Ingeniería Eléctrica, Sección de Computación. México, DF.","funcion":"N/A","url":"N/A"},{"referencia":"Brindle, A. (1980). Genetic algorithms for function optimization","funcion":"N/A","url":"https://doi.org/10.7939/R3FB4WS2W"}]}}